Alrighty so there are a ton of great things you can to with git and i am just going to fire them off randomly. To start git is great because you can work together as a team on a single project. You can view all the different changes that everybody makes and what is different about each one. You can also go back to previous versions of different files and things if you need to. (because somebody broke something, for example). 
Git allows you to work on projects offline because when you pull down a project, it is stored on your local machine. When you have finished working on something. You can PUSH it back up which essentially stores it back in the cloud so everybody else on your team has it. 
When other people work on project at the same time that can mean that files on your local machine can end up being different than the files that are stored in the cloud. There are a few things that git allows to remedy this situation:
The first thing to talk about is fetching. Fetching can be done manually or automatically. What fetching does is get the files stored on the cloud and let you know that there are differences between your files. Fetching does not overwrite the files that you have automatically. Once you have fetched the filles you can choose whether or not to PULL the files into your local files. Sometimes that does not cause any problems and you can just continue your own work on the updated project. 
To work part on a project without affecting what is already in it (say for example you have a working product like a live website that you don't want to be messed with, but you want to work on something like a new feature) you use a thing called BRANCHING. Branching essentially creates a second copy of that whole project for you to work on and commit and push and pull and acts the same as the original master(or parent) branch. In reality branching doesn't actually make an entire second copy but actually just uses the parts of existing files and does all kinds of other voodoo magic, which in turn is much less expensive to resources and happens almost instantaneously. Pretty cool huh??
After you finish this new feature in your branch you can submit what is called a “Pull request”. A pull request is essentially asking the person over the main branch to look over the changes that you made to the project, and if it doesn't break anything that is already there (at least not too badly) then he can pull and merge that new feature into the main project.
If things need to be changed before that branch can be merged, the owner can let the person know and the person can continue working on it, even withe pull request is still active. They can then make their changes and push them to the top of the branch. The owner can then see the commits as they happen. And when things have been sufficiently fixed, he can pull from that original pull request.
